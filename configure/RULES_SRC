#
.DEFAULT_GOAL := help

.PHONY: help default init distclean deinit

# # help is defined in 
# # https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Make Targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\-\_0-9]+:/ {            \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:


default: help


## Clone Source
init:
ifeq "$(INIT_SRC)" "1"
	git clone $(SRC_GITURL) $(SRC_PATH)
	cd $(SRC_PATH) && git checkout $(SRC_TAG)
else
	$(QUIET)echo "$(SRC_PATH) exists. make distclean first, if one would like to restart it."
endif

deinit: distclean
## Clean Source
distclean:
ifneq ($(wildcard $(SRC_PATH)/.*),)
	$(QUIET)echo "We've found $(SRC_PATH)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(SRC_PATH)
	$(QUIET)rm -f $(TOP)/config.status
	$(QUIET)rm -f $(TOP)/config.mak.autogen
	$(QUIET)rm -f $(TOP)/config.log		
else
	$(QUIET)echo "There is no $(SRC_PATH)."
endif


.PHONY: build conf

build.all:
	$(QUIET) make -C $(SRC_PATH) -j$(PARALLEL) all doc

## Build Source
build:
	$(QUIET) make -C $(SRC_PATH) -j$(PARALLEL)

.PHONY: configure clean
## Copy the site specific files into sources
configure:
	make -C $(SRC_PATH) distclean
	make -C $(SRC_PATH) configure
	cd $(SRC_PATH) && ./configure --prefix=$(INSTALL_LOCATION) --with-libpcre --with-editor=$(GIT_EDITOR) --enable-pthreads=$(POSIX_FLAGS)

clean:
	$(QUIET) make -C $(SRC_PATH) clean

